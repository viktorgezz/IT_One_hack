CREATE TABLE ACCOUNT
(
    id       int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    login    varchar(100) NOT NULL UNIQUE,
    password varchar(64)  NOT NULL,
    email    varchar(40)  NOT NULL UNIQUE
);

CREATE TABLE FRIEND
(
    id          int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    account1_id int REFERENCES ACCOUNT (id) ON DELETE CASCADE,
    account2_id int REFERENCES ACCOUNT (id) ON DELETE CASCADE,
    confirmed   BOOLEAN NOT NULL default FALSE
);

CREATE TABLE GOAL
(
    id              int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    account_id      int UNIQUE REFERENCES ACCOUNT (id) ON DELETE CASCADE,
    monthly_income  numeric(15, 2) CHECK ( monthly_income >= 0 ),
    monthly_savings numeric(15, 2) CHECK ( monthly_savings >= 0 )
);

CREATE TABLE EXPENSE
(
    id          int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    account_id  int REFERENCES ACCOUNT (id) ON DELETE CASCADE,
    category_id int          REFERENCES CATEGORY (id) ON DELETE SET NULL,
    title       varchar(150) NOT NULL,
    amount      NUMERIC(15, 2) CHECK ( amount >= 0 ),
    time        TIMESTAMP    NOT NULL
);

CREATE TABLE CATEGORY
(
    id    int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    account_id int REFERENCES ACCOUNT(id) ON DELETE SET NULL,
    title varchar(150) NOT NULL
);

CREATE TABLE Income
(
    id         int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    profit     NUMERIC(15, 2) CHECK ( profit >= 0 ),
    title      varchar(150) NOT NULL,
    account_id int REFERENCES ACCOUNT (id) ON DELETE CASCADE,
    time       TIMESTAMP    NOT NULL
);


CREATE TABLE Account_authority
(
    id serial PRIMARY KEY,
    id_account int NOT NULL REFERENCES ACCOUNT(id),
    c_authority varchar NOT NULL
);

CREATE TABLE Deactivated_token
(
    id UUID PRIMARY KEY,
    c_keep_until TIMESTAMP NOT NULL CHECK ( c_keep_until > now() )
);